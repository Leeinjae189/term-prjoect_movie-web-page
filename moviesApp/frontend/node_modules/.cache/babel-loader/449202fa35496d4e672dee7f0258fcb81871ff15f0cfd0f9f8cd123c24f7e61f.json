{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\INJAE\\\\Downloads\\\\React-NodeJS-MongoDB-Movies-App-main\\\\moviesApp\\\\frontend\\\\src\\\\components\\\\movie.js\",\n  _s = $RefreshSig$();\nimport \"./movie.css\";\nimport React, { useState } from 'react';\nimport Axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Movie = _ref => {\n  _s();\n  let {\n    poster,\n    title,\n    year,\n    rating,\n    setListOfFavorites,\n    listOfFavorites\n  } = _ref;\n  const [favoriteButtom, setFavoriteButton] = useState(`흥미목록에 추가`);\n\n  // Add movie to favorites\n  const createFavorite = () => {\n    // Check if movie is already in the list\n    const movieExists = listOfFavorites.find(favorite => favorite.title === title);\n    if (movieExists) {\n      // Display message indicating that movie is already in the list\n      alert(`${title} 은 이미 흥미목록에 추가된 영화입니다!`);\n      return;\n    }\n    setFavoriteButton(\"흥미목록에 추가된 영화입니다\");\n    fetch(\"http://localhost:3001/createFavorite\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        poster,\n        title,\n        year,\n        rating\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(data => {\n      // update the list of favorites in the parent component\n      setListOfFavorites([...listOfFavorites, {\n        title,\n        poster,\n        year,\n        rating\n      }]);\n\n      // fetch the updated list of favorite movies from the database\n      Axios.get(\"http://localhost:3001/getFavorites\").then(response => {\n        setListOfFavorites(response.data);\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: poster,\n      alt: \"Poster\",\n      className: \"card-img-top\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"card-title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text\",\n        children: year\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createFavorite,\n      children: favoriteButtom\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 7\n  }, this);\n};\n_s(Movie, \"QR9IgZuo6kiRYb5a3cWhxoj9DrM=\");\n_c = Movie;\nexport default Movie;\nvar _c;\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"names":["React","useState","Axios","Movie","poster","title","year","rating","setListOfFavorites","listOfFavorites","favoriteButtom","setFavoriteButton","createFavorite","movieExists","find","favorite","alert","fetch","method","body","JSON","stringify","headers","then","response","json","data","get"],"sources":["C:/Users/INJAE/Downloads/React-NodeJS-MongoDB-Movies-App-main/moviesApp/frontend/src/components/movie.js"],"sourcesContent":["import \"./movie.css\";\r\nimport React, { useState } from 'react';\r\nimport Axios from \"axios\";\r\n\r\n\r\n\r\nconst Movie = ( {poster, title, year, rating, setListOfFavorites, listOfFavorites } ) => {\r\n\r\n  const [favoriteButtom, setFavoriteButton] = useState(`흥미목록에 추가`);\r\n\r\n\r\n// Add movie to favorites\r\nconst createFavorite = () => {\r\n  // Check if movie is already in the list\r\n  const movieExists = listOfFavorites.find(favorite => favorite.title === title);\r\n  if (movieExists) {\r\n    // Display message indicating that movie is already in the list\r\n    alert(`${title} 은 이미 흥미목록에 추가된 영화입니다!`);\r\n    return;\r\n  }\r\n  setFavoriteButton(\"흥미목록에 추가된 영화입니다\");\r\n  fetch(\"http://localhost:3001/createFavorite\", {\r\n    method: \"POST\",\r\n    body: JSON.stringify({\r\n      poster,\r\n      title,\r\n      year,\r\n      rating,\r\n    }),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  })\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      // update the list of favorites in the parent component\r\n      setListOfFavorites([\r\n        ...listOfFavorites,\r\n        {\r\n          title,\r\n          poster,\r\n          year,\r\n          rating,\r\n        },\r\n      ]);\r\n\r\n      // fetch the updated list of favorite movies from the database\r\n      Axios.get(\"http://localhost:3001/getFavorites\").then((response) => {\r\n        setListOfFavorites(response.data);\r\n      });\r\n    });\r\n};\r\n  \r\n  return (\r\n      <div className=\"card\">\r\n          <img  src={poster} alt=\"Poster\" className='card-img-top' />\r\n          <div className=\"card-body\">\r\n              <h5 className=\"card-title\">{title}</h5>\r\n              <p className=\"card-text\">{year}</p>\r\n          </div>\r\n          <button onClick={createFavorite}>{favoriteButtom}</button>\r\n      </div>\r\n  );\r\n};\r\n\r\n\r\nexport default Movie;\r\n"],"mappings":";;AAAA,OAAO,aAAa;AACpB,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC;AAI1B,MAAMC,KAAK,GAAG,QAA2E;EAAA;EAAA,IAAzE;IAACC,MAAM;IAAEC,KAAK;IAAEC,IAAI;IAAEC,MAAM;IAAEC,kBAAkB;IAAEC;EAAgB,CAAC;EAEjF,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAE,UAAS,CAAC;;EAGlE;EACA,MAAMW,cAAc,GAAG,MAAM;IAC3B;IACA,MAAMC,WAAW,GAAGJ,eAAe,CAACK,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACV,KAAK,KAAKA,KAAK,CAAC;IAC9E,IAAIQ,WAAW,EAAE;MACf;MACAG,KAAK,CAAE,GAAEX,KAAM,wBAAuB,CAAC;MACvC;IACF;IACAM,iBAAiB,CAAC,iBAAiB,CAAC;IACpCM,KAAK,CAAC,sCAAsC,EAAE;MAC5CC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBjB,MAAM;QACNC,KAAK;QACLC,IAAI;QACJC;MACF,CAAC,CAAC;MACFe,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC,CACCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACd;MACAlB,kBAAkB,CAAC,CACjB,GAAGC,eAAe,EAClB;QACEJ,KAAK;QACLD,MAAM;QACNE,IAAI;QACJC;MACF,CAAC,CACF,CAAC;;MAEF;MACAL,KAAK,CAACyB,GAAG,CAAC,oCAAoC,CAAC,CAACJ,IAAI,CAAEC,QAAQ,IAAK;QACjEhB,kBAAkB,CAACgB,QAAQ,CAACE,IAAI,CAAC;MACnC,CAAC,CAAC;IACJ,CAAC,CAAC;EACN,CAAC;EAEC,oBACI;IAAK,SAAS,EAAC,MAAM;IAAA,wBACjB;MAAM,GAAG,EAAEtB,MAAO;MAAC,GAAG,EAAC,QAAQ;MAAC,SAAS,EAAC;IAAc;MAAA;MAAA;MAAA;IAAA,QAAG,eAC3D;MAAK,SAAS,EAAC,WAAW;MAAA,wBACtB;QAAI,SAAS,EAAC,YAAY;QAAA,UAAEC;MAAK;QAAA;QAAA;QAAA;MAAA,QAAM,eACvC;QAAG,SAAS,EAAC,WAAW;QAAA,UAAEC;MAAI;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QACjC,eACN;MAAQ,OAAO,EAAEM,cAAe;MAAA,UAAEF;IAAc;MAAA;MAAA;MAAA;IAAA,QAAU;EAAA;IAAA;IAAA;IAAA;EAAA,QACxD;AAEZ,CAAC;AAAC,GAzDIP,KAAK;AAAA,KAALA,KAAK;AA4DX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}